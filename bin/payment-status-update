#!/usr/bin/env node

var db = require('../models/index');

var config = require('../configuration');
var paypal = require('paypal-rest-sdk');
paypal.configure(config['registration']['paypal']['api_credentials']);

var models = require('../models');
var RegistrationPayment = models.RegistrationPayment;


RegistrationPayment.findAll({
    where: {
        type: 'paypal'
    }
}).catch(function(error) {
  console.log("Error getting payments: " + error);
}).then(function(payments) {
    payments.forEach(function(val, index, array) {
        console.log("Looking up payment " + val['id'] + " (" + val['details'] + ")");
        paypal.payment.get(val['details'], function(error, payment) {
            if(!!error) {
                console.log("Payment " + val['id'] + " Error");
                console.log(error);
            } else {
                console.log("Payment " + val['id'] + " Response: ");
                console.log("\tPaid: " + val['paid'] + ' (' + val['amount'] + ')');
                console.log("\tPayPal state: " + payment.state + ' (' + payment['transactions'][0]['amount']['currency'] + payment['transactions'][0]['amount']['total'] + ')');

                if(payment['transactions'][0]['amount']['currency'] != val['currency']) {
                    console.log('\tINVALID CURRENCY');
                    val.paid = false;
                    val.save();
                }
                else if(payment['transactions'][0]['amount']['total'] != val['amount']) {
                    console.log('\tInvalid amount');
                    val.amount = payment['transactions'][0]['amount']['total'];
                    val.save();
                }
                else if(val['paid'] && payment.state != 'approved') {
                    console.log('\tNOT APPROVED, but paid');
                    val.paid = false;
                    val.save();
                }
                else if(!val['paid'] && payment.state == 'approved') {
                    console.log('\tApproved, but not paid');
                    val.paid = true;
                    val.save();
                }
            };
        });
    });
});
